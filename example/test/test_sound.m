clc; clear; close all
%%% This is an exmple given in FreeFem Documentation: Release 4.6
%   Subsection 2.5 - Acoustics (sound.edp)

%% Mesh
% mesh generated by freefem++        
[node,elem] = getMeshFreeFEM('meshdata_sound.msh');
%load meshdata_sound.mat

% mesh info
bdStr = 'x==0'; 
Th = FeMesh2d(node,elem,bdStr);

%% PDE data
kc2 = 1;
gN = @(p) p(:,2).*(1-p(:,2));

%% Assemble bilinear form
Vh = 'P1'; quadOrder = 7;
Coef = {kc2, -1};  
Test = {'v.val',  'v.grad'};  
Trial = {'u.val', 'u.grad'};
kk = assem2d(Th,Coef,Test,Trial,Vh,quadOrder); 

%% Assemble Neumann boundary condition
Coef = gN;  
Test = 'v.val';  
Th.on = 1;
% Th.elem1d = Th.bdEdgeType{1};
% Th.elem1dIdx = Th.bdEdgeIdxType{1};
ff = assem1d(Th,Coef,Test,[],Vh,quadOrder); 

%% Solve
uh = kk\ff;
figure, 
subplot(1,2,1), 
showsolution(node,elem,uh(1:Th.N));
title('Numerical solution of varFEM');
uff = solFreeFEM('sol_sound.txt');
subplot(1,2,2),
showsolution(node,elem,uff(1:Th.N));
title('Numerical solution of FreeFEM++');

%% Interpolate to a 2D cartesian grid
figure, 
x = 0:0.01:5; y = 0:0.01:3;
varcontourf(x,y,node,elem,uh(1:Th.N),20);